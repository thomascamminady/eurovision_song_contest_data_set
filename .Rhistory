legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=7,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2.5, shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2.5, shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b> between 2016 and 2025.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the 2016 through 2025 Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com (2016-2025) • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "lightgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "darkgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=6,filename="chart.png",bg="white",dpi = 300)
p
data <- read_csv("ideation/final.csv") %>%
group_by(year, variable) %>%
mutate(country_ordered = reorder_within(country_receives_full, -rank, year)) %>%
ungroup()
# Ensure year is treated as factor and ordered reversed
data$year <- factor(data$year, levels = sort(unique(data$year), decreasing = TRUE))
p <- ggplot(data, aes(x = value, y = country_ordered)) +
# Light gray lines
geom_line(color = "darkgray",size=0.8) +
# rank_total: large black
geom_point(data = subset(data, variable == "rank_total"),
color = "black", size = 3.5) +
# rank_jury: small red
geom_point(data = subset(data, variable == "rank_jury"),
color = "#e6550d",fill="#e6550d", size = 2., shape = 23) +
# rank_public: small green
geom_point(data = subset(data, variable == "rank_public"),
color = "#8c6bb1", fill = "#8c6bb1",size = 2., shape = 17) +
# Facet
facet_grid(year ~ ., scales = "free") +
# Strip reorder suffix
scale_y_reordered() +
# x-axis with limits and breaks
scale_x_continuous(breaks = 1:17, limits = c(1, 17)) +
# Labels and styling
labs(
x = "Rank",
y = NULL,
caption = "Author: Thomas Camminady • Source: eurovisionworld.com • Repo: github.com/thomascamminady/eurovision_song_contest_data_set",
title = paste0(
"<b style='font-size:14pt;'>Top 5 Countries at the Eurovision Song Contest</b><br><br>",
"<span style='color:gray40;'>How the <b style='color:#8c6bb1;'>public vote</b> and the <b style='color:#e6550d;'>jury vote</b> affect the <b style='color:black;'>total rank</b>.</span>"
)
) +
theme_minimal(base_size = 8) +
theme(
text = element_text(color = "gray40"),
axis.text = element_text(color = "gray40"),
axis.title.x = element_text(color = "gray40"),
strip.text.y = element_text(angle = 0, hjust = 0, color = "gray40"),
legend.position = "none",
plot.title = element_markdown(hjust = 0.5, color = "gray40"),
plot.caption = element_text(margin = margin(t = 10))
)
ggsave(p,width=7,filename="chart.png",bg="white",dpi = 300)
p
